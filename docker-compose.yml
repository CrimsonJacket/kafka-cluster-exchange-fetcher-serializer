version: '3'

services:

  producer:
    image: producer
    container_name: producer
    build:
      context: ./producer
    environment:
      KAFKA_BROKER_LIST: "kafka1:9091,kafka2:9092,kafka3:9093"
    depends_on:
      - zookeeper
      - kafka1
      - kafka2
      - kafka3
    networks:
      - backend

  consumer:
    image: consumer
    container_name: consumer
    build:
      context: ./consumer
    environment:
      KAFKA_BROKER_LIST: "kafka1:9091,kafka2:9092,kafka3:9093"
    depends_on:
      - zookeeper
      - kafka1
      - kafka2
      - kafka3
    networks:
      - backend

  zookeeper:
    image: confluent/zookeeper:latest
    container_name: zookeeper
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_SERVER_ID=1
    ports:
      - "2181:2181"
    networks:
      - backend

  kafka-create-topics:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - kafka1
    command: |
      bash -c 'echo Waiting for Kafka to be ready... && \
      cub kafka-ready -b kafka1:9091 1 20 && \
      kafka-topics --create --topic event --partitions 3 --replication-factor 3 --if-not-exists --zookeeper zookeeper-1:2181 && \
      echo Done creating topic!'
    environment:
      # The following settings are listed here only to satisfy the image's requirements.
      # We override the image's `command` anyways, hence this container will not start a broker.
      KAFKA_BROKER_ID: ignored
      KAFKA_ZOOKEEPER_CONNECT: ignored
    networks:
      - default

  kafka1:
    image: confluentinc/cp-kafka:latest
    container_name: kafka1
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=3
      - KAFKA_BROKER_ID=1
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT_HOST://kafka1:9091
      - KAFKA_LISTENERS=PLAINTEXT_HOST://:9091
      - KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=0
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT_HOST
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
    ports:
      - 9091:9091
    depends_on:
      - zookeeper
    networks:
      - backend

  kafka2:
    image: confluentinc/cp-kafka:latest
    container_name: kafka2
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=3
      - KAFKA_BROKER_ID=2
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT_HOST://kafka2:9092
      - KAFKA_LISTENERS=PLAINTEXT_HOST://:9092
      - KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=0
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT_HOST
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    networks:
      - backend

  kafka3:
    image: confluentinc/cp-kafka:latest
    container_name: kafka3
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=3
      - KAFKA_BROKER_ID=3
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT_HOST://kafka3:9093
      - KAFKA_LISTENERS=PLAINTEXT_HOST://:9093
      - KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=0
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT_HOST
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
    ports:
      - 9093:9093
    depends_on:
      - zookeeper
    networks:
      - backend

networks: 
  backend: